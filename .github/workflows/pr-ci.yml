name: PHP Composer

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      database:
        image: postgres:13.1
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: productivity_suite_test
          POSTGRES_USER: psuite_app
          POSTGRES_PASSWORD: psuite_app_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run static analysis
        run: vendor/bin/phpstan analyse -l 5 src
      - name: Run unit suite
        run: bin/phpunit --coverage-text --printer mheap\\GithubActionsReporter\\Printer --testsuite unit
      - name: Run functional suite
        run: composer run-script execute-functional
        env:
          DATABASE_URL: "postgresql://psuite_app:psuite_app_pass@localhost:5432/productivity_suite_test?charset=UTF8&serverVersion=13"
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: ilya-pokamestov/productivity-suite:latest
#          secrets: |
#            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
